{"ast":null,"code":"import { MongoClient } from \"mongodb\"; //POST /api/new-meetup\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    const {\n      title,\n      image,\n      address,\n      description\n    } = data;\n    console.log(process.env.MONGODB_CONNECTION_STRING);\n    console.log(process.env.NEXT_PUBLIC_CONNECTION_STRING);\n    const client = await MongoClient.connect(process.env.MONGODB_CONNECTION_STRING);\n    const db = client.db(); //table\n\n    const meetupsCollection = db.collection(\"meetups\"); // document is like rows: object\n\n    const result = await meetupsCollection.insertOne(data); // result will be automatically generated ID\n\n    console.log(result); // can use try and catch here, but keeping it simple\n\n    client.close();\n    res.status(201).json({\n      message: \"Meetup Inserted\"\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["C:/Users/apurv/OneDrive/Desktop/JOB/React/nextjs meetups/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","title","image","address","description","console","log","process","env","MONGODB_CONNECTION_STRING","NEXT_PUBLIC_CONNECTION_STRING","client","connect","db","meetupsCollection","collection","result","insertOne","close","status","json","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CACA;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,OAAhB;AAAyBC,MAAAA;AAAzB,QAAyCL,IAA/C;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,yBAAxB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYE,6BAAxB;AAEA,UAAMC,MAAM,GAAG,MAAMjB,WAAW,CAACkB,OAAZ,CACnBL,OAAO,CAACC,GAAR,CAAYC,yBADO,CAArB;AAGA,UAAMI,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAXyB,CAazB;;AACA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAdyB,CAgBzB;;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BlB,IAA5B,CAArB,CAjByB,CAmBzB;;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ,EApByB,CAsBzB;;AACAL,IAAAA,MAAM,CAACO,KAAP;AAEArB,IAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AAED,eAAe1B,OAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n//POST /api/new-meetup\r\n\r\nasync function handler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    const data = req.body;\r\n\r\n    const { title, image, address, description } = data;\r\n\r\n    console.log(process.env.MONGODB_CONNECTION_STRING);\r\n    console.log(process.env.NEXT_PUBLIC_CONNECTION_STRING);\r\n\r\n    const client = await MongoClient.connect(\r\n      process.env.MONGODB_CONNECTION_STRING\r\n    );\r\n    const db = client.db();\r\n\r\n    //table\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n\r\n    // document is like rows: object\r\n    const result = await meetupsCollection.insertOne(data);\r\n\r\n    // result will be automatically generated ID\r\n    console.log(result);\r\n\r\n    // can use try and catch here, but keeping it simple\r\n    client.close();\r\n\r\n    res.status(201).json({ message: \"Meetup Inserted\" });\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}