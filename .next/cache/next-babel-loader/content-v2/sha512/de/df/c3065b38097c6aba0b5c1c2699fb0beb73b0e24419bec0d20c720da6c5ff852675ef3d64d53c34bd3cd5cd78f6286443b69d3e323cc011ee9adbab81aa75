{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\apurv\\\\OneDrive\\\\Desktop\\\\JOB\\\\React\\\\nextjs meetups\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      image: props.meetupData.image,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://apurvjain28:DATAbase%40123@cluster0.lnnjk.mongodb.net/meetups-next?retryWrites=true&w=majority\");\n  const db = client.db(); //table\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  const meetupsPath = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupsPath // paths: [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  // we will nee id of the meetup which is encoded in url\n  // will be retrieved using context.params\n  // earlier we use useRouter hook to retrieve the url parameters\n  // but we can use hooks only in components\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://apurvjain28:DATAbase%40123@cluster0.lnnjk.mongodb.net/meetups-next?retryWrites=true&w=majority\");\n  const db = client.db(); //table\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    },\n    revalidate: 10\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/apurv/OneDrive/Desktop/JOB/React/nextjs meetups/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","Fragment","Head","MeetupDetails","props","meetupData","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","meetupsPath","map","meetup","params","meetupId","toString","close","fallback","paths","getStaticProps","context","console","log","selectedMeetup","findOne","id","revalidate"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,8GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAJqC,CAMrC;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACA,QAAMC,WAAW,GAAGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,KAAa;AAC3CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAEF,MAAM,CAACJ,GAAP,CAAWO,QAAX;AADJ;AADmC,GAAb,CAAZ,CAApB;AAMAd,EAAAA,MAAM,CAACe,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAER,WAFF,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdK,GAAP;AAgBD;AAED,OAAO,eAAeS,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAMN,QAAQ,GAAGM,OAAO,CAACP,MAAR,CAAeC,QAAhC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,QAAMb,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,8GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAZ4C,CAc5C;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMkB,cAAc,GAAG,MAAMnB,iBAAiB,CAACoB,OAAlB,CAA0B;AACrDhB,IAAAA,GAAG,EAAEnB,QAAQ,CAACyB,QAAD;AADwC,GAA1B,CAA7B;AAIAb,EAAAA,MAAM,CAACe,KAAP;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV8B,QAAAA,EAAE,EAAEF,cAAc,CAACf,GAAf,CAAmBO,QAAnB,EADM;AAEVnB,QAAAA,KAAK,EAAE2B,cAAc,CAAC3B,KAFZ;AAGVE,QAAAA,OAAO,EAAEyB,cAAc,CAACzB,OAHd;AAIVD,QAAAA,KAAK,EAAE0B,cAAc,CAAC1B,KAJZ;AAKVE,QAAAA,WAAW,EAAEwB,cAAc,CAACxB;AALlB;AADP,KADF;AAUL2B,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD;AACD,eAAejC,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MeetupDetail\r\n        title={props.meetupData.title}\r\n        image={props.meetupData.image}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://apurvjain28:DATAbase%40123@cluster0.lnnjk.mongodb.net/meetups-next?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  //table\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  const meetupsPath = meetups.map((meetup) => ({\r\n    params: {\r\n      meetupId: meetup._id.toString(),\r\n    },\r\n  }));\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetupsPath,\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n  // we will nee id of the meetup which is encoded in url\r\n  // will be retrieved using context.params\r\n  // earlier we use useRouter hook to retrieve the url parameters\r\n  // but we can use hooks only in components\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://apurvjain28:DATAbase%40123@cluster0.lnnjk.mongodb.net/meetups-next?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  //table\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n    revalidate: 10,\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}